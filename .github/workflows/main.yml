name: Release Creation

on: 
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # get part of the tag after the `v`
    - name: Extract tag version number
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Echo tag output
      run: echo ${{ steps.get_version.outputs.VERSION }}

    # # Substitute the Manifest and Download URLs in the module.json
    # - name: Substitute Manifest and Download Links For Versioned Ones
    #   id: sub_manifest_link_version
    #   uses: microsoft/variable-substitution@v1
    #   with:
    #     files: 'module.json'
    #   env:
    #     version: ${{steps.get_version.outputs.VERSION}}
    #     manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
    #     download: https://github.com/${{github.repository}}/releases/download/${{steps.get_version.outputs.VERSION}}/module.zip

    # # Create a zip file with all files required by the module to add to the release
    # - run: zip -r ./module.zip module.json monsterblock.js monsterblock.css actor-sheet.html lang/ input-expressions/handler.js

    # # Create a release for this specific version
    # - name: Update Release with Files
    #   id: create_version_release
    #   uses: ncipollo/release-action@v1
    #   with:
    #     allowUpdates: true # Set this to false if you want to prevent updating existing releases
    #     name: ${{ github.event.release.name }}
    #     draft: true
    #     prerelease: false
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     artifacts: './module.json, ./module.zip'
    #     tag: ${{ github.event.release.tag_name }}
    #     body: ${{ github.event.release.body }}